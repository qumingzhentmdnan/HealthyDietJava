2024-02-17 11:43:27.126 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.net.ConnectException: Failed to connect to region-3.seetacloud.com/36.111.128.35:14705]
2024-02-17 11:44:12.536 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.net.ConnectException: Failed to connect to region-3.seetacloud.com/36.111.128.35:14705]
2024-02-17 11:45:25.386 [Thread-5] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [OkHttp aip.baidubce.com] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:201)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1099)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1461)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1066)
 okio.InputStreamSource.read(JvmOkio.kt:93)
 okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:128)
 okio.RealBufferedSource.request(RealBufferedSource.kt:209)
 okio.RealBufferedSource.require(RealBufferedSource.kt:202)
 okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.kt:89)
 okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:618)
 okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:609)
 okhttp3.internal.concurrent.TaskQueue$execute$1.runOnce(TaskQueue.kt:98)
 okhttp3.internal.concurrent.TaskRunner.runTask(TaskRunner.kt:116)
 okhttp3.internal.concurrent.TaskRunner.access$runTask(TaskRunner.kt:42)
 okhttp3.internal.concurrent.TaskRunner$runnable$1.run(TaskRunner.kt:65)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-17 11:45:25.387 [Thread-5] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [OkHttp aip.baidubce.com] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:201)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1099)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1461)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1066)
 okio.InputStreamSource.read(JvmOkio.kt:93)
 okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:128)
 okio.RealBufferedSource.request(RealBufferedSource.kt:209)
 okio.RealBufferedSource.require(RealBufferedSource.kt:202)
 okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.kt:89)
 okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:618)
 okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:609)
 okhttp3.internal.concurrent.TaskQueue$execute$1.runOnce(TaskQueue.kt:98)
 okhttp3.internal.concurrent.TaskRunner.runTask(TaskRunner.kt:116)
 okhttp3.internal.concurrent.TaskRunner.access$runTask(TaskRunner.kt:42)
 okhttp3.internal.concurrent.TaskRunner$runnable$1.run(TaskRunner.kt:65)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-17 11:45:25.387 [Thread-5] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [OkHttp TaskRunner] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Object.wait0(Native Method)
 java.base/java.lang.Object.wait(Object.java:366)
 java.base/java.lang.Object.wait(Object.java:488)
 okhttp3.internal.concurrent.TaskRunner$RealBackend.coordinatorWait(TaskRunner.kt:294)
 okhttp3.internal.concurrent.TaskRunner.awaitTaskToRun(TaskRunner.kt:218)
 okhttp3.internal.concurrent.TaskRunner$runnable$1.run(TaskRunner.kt:59)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-17 12:05:47.581 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.net.ConnectException: Failed to connect to region-3.seetacloud.com/36.111.128.35:30845]
2024-02-17 14:00:21.358 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.net.ConnectException: Failed to connect to region-3.seetacloud.com/36.111.128.35:30845]
